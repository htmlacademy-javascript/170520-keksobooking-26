/* Возвращает случайное число больше либо равное нулю в диапазоне [min, max] с precision знаков после запятой.
 * Если точность не задана, то по умолчанию задаём точность равную нулю. Т.е. результат будет без десятичной части, что позволяет генерировать целые числа. */
function getRandomPositiveFloat(min, max, precision = 0) {

  /* min и max переданы. При этом важно разрешить численный 0, но не пропустить undefined, false, пустую строку и прочее */
  if ( !min && min !== 0 || !max && max !==0) {
    return null;
  }

  /* Пропускаем только числа */
  if( typeof min !== 'number' || typeof max !== 'number') {
    return null;
  }

  /* Разрешаем только значения больше ноля (и сам ноль). Например, координаты на карте */
  if( min < 0 || max < 0  ) {
    return null;
  }

  /* Весьма неочевидная проверка на случай если точность задана жёстче чем может позволить заданный диапазон.
   * Например при диапазоне [1.46, 1.47] возможны варианты с точностью в две более знака после запятой: 1.462, 1.465, 1.469, но невозможны варианты с точностью ноль или один.
   * Одновременно эта функция так же проверяет чтобы max был строго больше min. */
  if(+min.toFixed(precision) >= +max.toFixed(precision)) {
    return null;
  }

  /* Считаем рандом по логике random * (max-min) + min и обрезаем знаки после запятой функцией toFixed() */
  return +(Math.random() * (max - min) + min).toFixed(precision);
}


/* Пример использования */
for ( let i=0; i<30; i++ ) {
  console.log(getRandomPositiveFloat(1.46, 1.47, 4));
}

